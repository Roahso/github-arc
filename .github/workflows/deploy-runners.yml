name: Deploy Runner Scale Sets

on:
  push:
    branches: [ main ]
    paths:
      - 'charts/runner-set/**'
      - 'config/*-runners.yaml'
      - '.github/workflows/deploy-runners.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'charts/runner-set/**'
      - 'config/*-runners.yaml'
      - '.github/workflows/deploy-runners.yml'
  workflow_dispatch:
    inputs:
      runner_set:
        description: 'Runner set to deploy'
        required: true
        default: 'standard'
        type: choice
        options:
          - standard
          - custom
          - all

env:
  HELM_VERSION: v3.12.0
  KUBECTL_VERSION: v1.28.0

jobs:
  validate:
    name: Validate Runner Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Validate standard runners chart
        run: |
          helm lint charts/runner-set/
          helm template test charts/runner-set/ -f config/values.yaml -f config/standard-runners.yaml

      - name: Validate custom runners chart
        run: |
          helm template test charts/runner-set/ -f config/values.yaml -f config/custom-runners.yaml

      - name: Validate Kubernetes manifests
        run: |
          helm template test charts/runner-set/ -f config/values.yaml -f config/standard-runners.yaml | kubectl apply --dry-run=client -f -

  build-custom-image:
    name: Build Custom Runner Image
    runs-on: ubuntu-latest
    if: github.event.inputs.runner_set == 'custom' || github.event.inputs.runner_set == 'all' || contains(github.event.head_commit.modified, 'docker/custom-runner/')
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Generate image tag
        id: image-tag
        run: |
          echo "tag=v$(date +%Y%m%d)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push custom runner image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/custom-runner:${{ steps.image-tag.outputs.tag }} ./docker/custom-runner/
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/custom-runner:${{ steps.image-tag.outputs.tag }}

      - name: Update custom runners config
        run: |
          sed -i "s|image: \".*\"|image: \"${{ secrets.ACR_NAME }}.azurecr.io/custom-runner:${{ steps.image-tag.outputs.tag }}\"|" config/custom-runners.yaml

  deploy-standard-runners:
    name: Deploy Standard Runners
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') && (github.event.inputs.runner_set == 'standard' || github.event.inputs.runner_set == 'all' || github.event.inputs.runner_set == '')
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Deploy Standard Runners
        run: |
          helm upgrade --install standard-runners ./charts/runner-set \
            -f config/values.yaml \
            -f config/standard-runners.yaml \
            --namespace github-runner-system \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          kubectl get runnerdeployments -n github-runner-system
          kubectl get runners -n github-runner-system

  deploy-custom-runners:
    name: Deploy Custom Runners
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') && (github.event.inputs.runner_set == 'custom' || github.event.inputs.runner_set == 'all')
    needs: [validate, build-custom-image]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Deploy Custom Runners
        run: |
          helm upgrade --install custom-runners ./charts/runner-set \
            -f config/values.yaml \
            -f config/custom-runners.yaml \
            --namespace github-runner-system \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          kubectl get runnerdeployments -n github-runner-system
          kubectl get runners -n github-runner-system 