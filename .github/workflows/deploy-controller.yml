name: Deploy GitHub Actions Runner Controller

on:
  push:
    branches: [ main ]
    paths:
      - 'charts/controller/**'
      - 'config/values.yaml'
      - '.github/workflows/deploy-controller.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'charts/controller/**'
      - 'config/values.yaml'
      - '.github/workflows/deploy-controller.yml'
  workflow_dispatch:

env:
  HELM_VERSION: v3.12.0
  KUBECTL_VERSION: v1.28.0

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Validate Helm chart
        run: |
          helm lint charts/controller/
          helm template test charts/controller/ -f config/values.yaml

      - name: Validate Kubernetes manifests
        run: |
          helm template test charts/controller/ -f config/values.yaml | kubectl apply --dry-run=client -f -

  deploy:
    name: Deploy Controller
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Deploy Controller
        run: |
          helm upgrade --install github-runner-controller ./charts/controller \
            -f config/values.yaml \
            --namespace github-runner-system \
            --create-namespace \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          kubectl get pods -n github-runner-system -l app.kubernetes.io/component=controller
          kubectl get runnerdeployments -n github-runner-system || echo "No runner deployments yet" 